const CACHE_NAME="sweet-dreams-v1";self.addEventListener("install",e=>{console.log("Service Worker installing"),self.skipWaiting()}),self.addEventListener("activate",e=>{console.log("Service Worker activating"),e.waitUntil(self.clients.claim())});let timerInterval=null;function startPersistentTimer(e){const{currentTime:t,targetTime:i,checkNumber:s,dayNumber:n}=e;stopPersistentTimer(),showPersistentNotification(t,i,s,n);const r=/iPhone|iPad|iPod|Android/i.test(navigator.userAgent)?5e3:1e3;timerInterval=setInterval(()=>{const r=Math.floor((Date.now()-e.startTime)/1e3);updateTimerNotification({currentTime:t+r,targetTime:i,checkNumber:s,dayNumber:n})},r)}function stopPersistentTimer(){timerInterval&&(clearInterval(timerInterval),timerInterval=null),self.registration.getNotifications({tag:"sleep-timer-persistent"}).then(e=>{e.forEach(e=>e.close())})}function showPersistentNotification(e,t,i,s,n=!1){const r=Math.max(0,t-e),a=Math.floor(r/60),o=`Sleep Timer - Check ${i} (Day ${s})`,c=r>0?`${a}:${(r%60).toString().padStart(2,"0")} remaining`:"âœ“ Ready to check!",l=!n||0===r;self.registration.showNotification(o,{body:c,icon:"/sweet-dreams/icons/icon.svg",badge:"/sweet-dreams/icons/icon.svg",tag:"sleep-timer-persistent",requireInteraction:!0,silent:!l,renotify:n,persistent:!0,actions:[{action:"check",title:"Check Baby",icon:"/sweet-dreams/icons/icon.svg"},{action:"stop",title:"Stop Timer",icon:"/sweet-dreams/icons/icon.svg"}],data:{currentTime:e,targetTime:t,checkNumber:i,dayNumber:s,url:"/sweet-dreams/",isUpdate:n}})}function updateTimerNotification(e){const{currentTime:t,targetTime:i,checkNumber:s,dayNumber:n}=e;showPersistentNotification(t,i,s,n,!0)}self.addEventListener("message",e=>{const{type:t,data:i}=e.data;switch(t){case"START_PERSISTENT_TIMER":startPersistentTimer(i);break;case"STOP_PERSISTENT_TIMER":stopPersistentTimer();break;case"UPDATE_TIMER":updateTimerNotification(i)}}),self.addEventListener("notificationclick",e=>{e.notification.close(),"check"===e.action?e.waitUntil(clients.openWindow("/sweet-dreams/#check")):"stop"===e.action?(stopPersistentTimer(),e.waitUntil(self.clients.matchAll().then(e=>{e.forEach(e=>{e.postMessage({type:"STOP_TIMER_FROM_NOTIFICATION"})})}))):e.waitUntil(clients.openWindow("/sweet-dreams/"))});